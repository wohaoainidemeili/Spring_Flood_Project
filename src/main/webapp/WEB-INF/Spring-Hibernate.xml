<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop.xsd">
       <bean id="mydataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
              <property name="driverClassName" value="org.postgresql.Driver"></property>
              <property name="url" value="jdbc:postgresql://localhost:5432/SpringFlood1"></property>
              <property name="username" value="postgres"></property>
              <property name="password" value="930316"></property>
       </bean>
       <bean id="mysessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
              <property name="dataSource"  ref="mydataSource"></property>
              <!--<property name="annotatedClasses">
                  <list>
                      <value>yuan.flood.floodEvent</value>
                  </list>
              </property>-->
              <property name="mappingDirectoryLocations">
                     <list>
                            <value>
                                   classpath:/yuan/flood/dao/Entity
                            </value>
                     </list>
              </property>
              <property name="hibernateProperties">
                     <props>
                            <prop key="hibernate.dialect">
                                   org.hibernate.dialect.PostgreSQL9Dialect
                            </prop>
                            <!--<prop key="hibernate.current_session_context_class">thread</prop>-->
                            <!-- <prop key="hibernate.connection.autocommit">true</prop>-->
                           <prop key="hibernate.autoReconnect">true</prop>
                           <prop key="hibernate.connection.autocommit">true</prop>
                            <prop key="hibernate.show_sql">true</prop>
                            <prop key="hibernate.format_sql">true</prop>
                            <prop key="hibernate.hbm2ddl.auto">update</prop>
                     </props>
              </property>
       </bean>
       <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
              <property name="sessionFactory" ref="mysessionFactory" />
       </bean>
       <!-- <bean id="hibernateSupportDao" class="org.springframework.orm.hibernate4.support.HibernateDaoSupport" abstract="true">
               <property name="sessionFactory" ref="mysessionFactory"></property>
        </bean>-->
       <!-- <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
               <property name="sessionFactory" ref="mysessionFactory"></property>
        </bean>-->
       <!-- more bean definitions go here -->

       <tx:advice id="txAdvice" transaction-manager="transactionManager">
              <tx:attributes>
                     <tx:method name="get*" propagation="REQUIRED" />
                     <tx:method name="delete*" propagation="REQUIRED" />
                     <tx:method name="update*" propagation="REQUIRED" />
                     <tx:method name="add*" propagation="REQUIRED" />
                     <tx:method name="save*" propagation="REQUIRED"/>
                     <tx:method name="rem*" propagation="REQUIRED" />
                     <!-- <tx:method name="*" propagation="true" />-->
              </tx:attributes>

       </tx:advice>
       <aop:config expose-proxy="true">
              <!-- 只对业务逻辑层实施事务 -->
              <aop:pointcut id="txPointcut" expression="execution(* yuan.flood.service.*.*(..))" />
              <!-- Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
              <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
       </aop:config>
</beans>